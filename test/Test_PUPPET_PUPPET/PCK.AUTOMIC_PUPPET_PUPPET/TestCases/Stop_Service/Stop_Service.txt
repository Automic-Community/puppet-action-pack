*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        stop_service
Test Template     Stop Service Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    PuppetPath             Service Name       SudoUsername        Options       SudoPassword
Stop Service with valid puppet path and existing service name
                      [Tags]    main_scenarios
                      OK        ${Puppet_Path_UNIX}    ${Service_Name}    ${Sudo_Username}    ${Options}    ${Sudo_Password}

Asserting puppet path as optional field for an already stopped service
                      OK        ${EMPTY}               ${Service_Name}    ${Sudo_Username}    ${Options}    ${Sudo_Password}

Assert behavior for invalid puppet path
                      NOK       Invalid                ${Service_Name}    ${Sudo_Username}    ${Options}    ${Sudo_Password}

Assert behavior for invalid service name
                      NOK       ${Puppet_Path_UNIX}    Invalid            ${Sudo_Username}    ${Options}    ${Sudo_Password}

Assert service name as mandatory field
                      NOK       ${Puppet_Path_UNIX}    ${EMPTY}           ${Sudo_Username}    ${Options}    ${Sudo_Password}

*** Keywords ***
Startup
    Log    *******Start Test "STOP SERVICE"*******
    Log    *******Connect to AE*******
    Connect AE

Stop Service Template
    [Arguments]    ${OK_NOK}    ${PuppetPath}    ${ServiceName}    ${Sudo_Username}    ${Options}    ${Sudo_Password}
    [Documentation]    This test is used to stop a service.
    ...    -Precondition: To execute this test, puppet executable should be present in Path provided and if no path is provided then puppet executable should be present in default path(defined in env variables). Service name should be changed accordingly.
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK/FAULT_OTHER. Value of this variable should be OK or NOK.
    ...    -${Puppet_Path}: This field specifies path to the puppet executable, if empty defaults to ./puppet
    ...    -${ServiceName}: This field sepcifies the name of service which you want to stop.
    ...    -${Sudo_Username}: This field specifies sudo username in case of UNIX environment.
    ...    -${Options}: This field specifies sudo options in case of UNIX environment.
    ...    -${Sudo_Password}: This field specifies sudo password in case of UNIX environment.
    Generate String
    Action Create    ${_STOP_SERVICE_ACTION}
    Run Keyword If    '${PuppetPath}' == 'Invalid'    Action Set    &UC4RB_PUP_PUPPET_PATH#    ${Generated_Name}_${Time}    ELSE IF    '${ENV}' == 'WIN'
    ...    Action Set    &UC4RB_PUP_PUPPET_PATH#    ${Puppet_Path_WIN}    ELSE    Action Set    &UC4RB_PUP_PUPPET_PATH#
    ...    ${Puppet_Path_UNIX}
    Run Keyword If    '${PuppetPath}' == '${EMPTY}'    Action Set    &UC4RB_PUP_PUPPET_PATH#    ${PuppetPath}
    Run Keyword If    '${ServiceName}' == 'Invalid'    Action Set    &UC4RB_PUP_SRV_NAME#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_PUP_SRV_NAME#    ${ServiceName}
    Run Keyword If    '${ENV}' == 'UNIX'    Action Set    &UC4RB_SUDO_USER#    ${Sudo_Username}
    Run Keyword If    '${ENV}' == 'UNIX'    Action Set    &UC4RB_USE_SUDO#    ${Options}
    Run Keyword If    '${ENV}' == 'UNIX'    Action Set    &UC4RB_SUDO_PASSWORD#    ${Sudo_Password}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Action Report Should Be Found
    Run Keyword If    '${OK_NOK}' == 'OK'    Action Return Status Should Be    ${ENDED_OK}
    Run Keyword If    '${OK_NOK}' == 'OK'    Action Return Code Should Be    ${RETURN_CODE_SUCCESS}
    Run Keyword If    '${OK_NOK}' == 'NOK'    Assert Failure

Teardown
    Log    *******End Test "STOP SERVICE"*******
